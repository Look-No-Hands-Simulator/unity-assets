//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.AdsDv
{
    [Serializable]
    public class AI2VCUStatusMsg : Message
    {
        public const string k_RosMessageName = "ads_dv_msgs/AI2VCUStatus";
        public override string RosMessageName => k_RosMessageName;

        //  Handshake
        public bool handshake;
        //  Shutdown request to VCU
        public bool estop_request;
        //  Autonomous mission status [0 - 3]
        public byte mission_status;
        public const byte MISSION_STATUS_NOT_SELECTED = 0;
        public const byte MISSION_STATUS_SELECTED = 1;
        public const byte MISSION_STATUS_RUNNING = 2;
        public const byte MISSION_STATUS_FINISHED = 3;
        //  Requested vehicle direction [0 - 3]
        public byte direction_request;
        public const byte DIRECTION_REQUEST_NEUTRAL = 0;
        public const byte DIRECTION_REQUEST_FORWARD = 1;
        public const byte DIRECTION_REQUEST_REVERSE = 2;
        //  Lap counter [0 - 15]
        public byte lap_counter;
        //  Number of cones detected [0 - 255]
        public byte cones_count_actual;
        //  Total number of cones detected [0 - 65535]
        public ushort cones_count_all;
        //  Actual vehicle speed [0 - 255] km/h
        public byte veh_speed_actual_kmh;
        //  Demanded vehicle speed [0 - 255] km/h
        public byte veh_speed_demand_kmh;

        public AI2VCUStatusMsg()
        {
            this.handshake = false;
            this.estop_request = false;
            this.mission_status = 0;
            this.direction_request = 0;
            this.lap_counter = 0;
            this.cones_count_actual = 0;
            this.cones_count_all = 0;
            this.veh_speed_actual_kmh = 0;
            this.veh_speed_demand_kmh = 0;
        }

        public AI2VCUStatusMsg(bool handshake, bool estop_request, byte mission_status, byte direction_request, byte lap_counter, byte cones_count_actual, ushort cones_count_all, byte veh_speed_actual_kmh, byte veh_speed_demand_kmh)
        {
            this.handshake = handshake;
            this.estop_request = estop_request;
            this.mission_status = mission_status;
            this.direction_request = direction_request;
            this.lap_counter = lap_counter;
            this.cones_count_actual = cones_count_actual;
            this.cones_count_all = cones_count_all;
            this.veh_speed_actual_kmh = veh_speed_actual_kmh;
            this.veh_speed_demand_kmh = veh_speed_demand_kmh;
        }

        public static AI2VCUStatusMsg Deserialize(MessageDeserializer deserializer) => new AI2VCUStatusMsg(deserializer);

        private AI2VCUStatusMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.handshake);
            deserializer.Read(out this.estop_request);
            deserializer.Read(out this.mission_status);
            deserializer.Read(out this.direction_request);
            deserializer.Read(out this.lap_counter);
            deserializer.Read(out this.cones_count_actual);
            deserializer.Read(out this.cones_count_all);
            deserializer.Read(out this.veh_speed_actual_kmh);
            deserializer.Read(out this.veh_speed_demand_kmh);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.handshake);
            serializer.Write(this.estop_request);
            serializer.Write(this.mission_status);
            serializer.Write(this.direction_request);
            serializer.Write(this.lap_counter);
            serializer.Write(this.cones_count_actual);
            serializer.Write(this.cones_count_all);
            serializer.Write(this.veh_speed_actual_kmh);
            serializer.Write(this.veh_speed_demand_kmh);
        }

        public override string ToString()
        {
            return "AI2VCUStatusMsg: " +
            "\nhandshake: " + handshake.ToString() +
            "\nestop_request: " + estop_request.ToString() +
            "\nmission_status: " + mission_status.ToString() +
            "\ndirection_request: " + direction_request.ToString() +
            "\nlap_counter: " + lap_counter.ToString() +
            "\ncones_count_actual: " + cones_count_actual.ToString() +
            "\ncones_count_all: " + cones_count_all.ToString() +
            "\nveh_speed_actual_kmh: " + veh_speed_actual_kmh.ToString() +
            "\nveh_speed_demand_kmh: " + veh_speed_demand_kmh.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
