//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.AdsDv
{
    [Serializable]
    public class VCU2LOGStatusMsg : Message
    {
        public const string k_RosMessageName = "ads_dv_msgs/VCU2LOGStatus";
        public override string RosMessageName => k_RosMessageName;

        //  [0 - 7]
        public byte state_assi;
        public const byte STATE_ASSI_OFF = 1;
        public const byte STATE_ASSI_READY = 2;
        public const byte STATE_ASSI_DRIVING = 3;
        public const byte STATE_ASSI_EMERGENCY_BRAKE = 4;
        public const byte STATE_ASSI_FINISH = 5;
        //  [0 - 3]
        public byte state_ebs;
        public const byte STATE_EBS_UNAVAILABLE = 1;
        public const byte STATE_EBS_ARMED = 2;
        public const byte STATE_EBS_TRIGGERED = 3;
        //  [0 - 7]
        public byte state_ami;
        public const byte STATE_AMI_ACCELERATION = 1;
        public const byte STATE_AMI_SKIDPAD = 2;
        public const byte STATE_AMI_AUTOCROSS = 3;
        public const byte STATE_AMI_TRACK_DRIVE = 4;
        public const byte STATE_AMI_BRAKE_TEST = 5;
        public const byte STATE_AMI_INSPECTION = 6;
        public bool state_steering;
        //  [0 - 3]
        public byte state_service_brake;
        public const byte STATE_SERVICE_BRAKE_DISENGAGED = 1;
        public const byte STATE_SERVICE_BRAKE_ENGAGED = 2;
        public const byte STATE_SERVICE_BRAKE_AVAILABLE = 3;
        //  [0 - 15]
        public byte lap_counter;
        //  [0 - 255]
        public byte cones_count_actual;
        //  [0 - 131071]
        public uint cones_count_all;

        public VCU2LOGStatusMsg()
        {
            this.state_assi = 0;
            this.state_ebs = 0;
            this.state_ami = 0;
            this.state_steering = false;
            this.state_service_brake = 0;
            this.lap_counter = 0;
            this.cones_count_actual = 0;
            this.cones_count_all = 0;
        }

        public VCU2LOGStatusMsg(byte state_assi, byte state_ebs, byte state_ami, bool state_steering, byte state_service_brake, byte lap_counter, byte cones_count_actual, uint cones_count_all)
        {
            this.state_assi = state_assi;
            this.state_ebs = state_ebs;
            this.state_ami = state_ami;
            this.state_steering = state_steering;
            this.state_service_brake = state_service_brake;
            this.lap_counter = lap_counter;
            this.cones_count_actual = cones_count_actual;
            this.cones_count_all = cones_count_all;
        }

        public static VCU2LOGStatusMsg Deserialize(MessageDeserializer deserializer) => new VCU2LOGStatusMsg(deserializer);

        private VCU2LOGStatusMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.state_assi);
            deserializer.Read(out this.state_ebs);
            deserializer.Read(out this.state_ami);
            deserializer.Read(out this.state_steering);
            deserializer.Read(out this.state_service_brake);
            deserializer.Read(out this.lap_counter);
            deserializer.Read(out this.cones_count_actual);
            deserializer.Read(out this.cones_count_all);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.state_assi);
            serializer.Write(this.state_ebs);
            serializer.Write(this.state_ami);
            serializer.Write(this.state_steering);
            serializer.Write(this.state_service_brake);
            serializer.Write(this.lap_counter);
            serializer.Write(this.cones_count_actual);
            serializer.Write(this.cones_count_all);
        }

        public override string ToString()
        {
            return "VCU2LOGStatusMsg: " +
            "\nstate_assi: " + state_assi.ToString() +
            "\nstate_ebs: " + state_ebs.ToString() +
            "\nstate_ami: " + state_ami.ToString() +
            "\nstate_steering: " + state_steering.ToString() +
            "\nstate_service_brake: " + state_service_brake.ToString() +
            "\nlap_counter: " + lap_counter.ToString() +
            "\ncones_count_actual: " + cones_count_actual.ToString() +
            "\ncones_count_all: " + cones_count_all.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
