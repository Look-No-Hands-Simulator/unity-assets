//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.AdsDv
{
    [Serializable]
    public class VCU2AISteerMsg : Message
    {
        public const string k_RosMessageName = "ads_dv_msgs/VCU2AISteer";
        public override string RosMessageName => k_RosMessageName;

        //  Current steering angle [-27.2 - 27.2] deg
        public short steer_angle_deg;
        //  Maximum allowable steering angle [0 - 27.2] deg
        public ushort steer_angle_max_deg;
        //  Requested steering angle [-27.2 - 27.2] deg
        public short steer_angle_request_deg;

        public VCU2AISteerMsg()
        {
            this.steer_angle_deg = 0;
            this.steer_angle_max_deg = 0;
            this.steer_angle_request_deg = 0;
        }

        public VCU2AISteerMsg(short steer_angle_deg, ushort steer_angle_max_deg, short steer_angle_request_deg)
        {
            this.steer_angle_deg = steer_angle_deg;
            this.steer_angle_max_deg = steer_angle_max_deg;
            this.steer_angle_request_deg = steer_angle_request_deg;
        }

        public static VCU2AISteerMsg Deserialize(MessageDeserializer deserializer) => new VCU2AISteerMsg(deserializer);

        private VCU2AISteerMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.steer_angle_deg);
            deserializer.Read(out this.steer_angle_max_deg);
            deserializer.Read(out this.steer_angle_request_deg);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.steer_angle_deg);
            serializer.Write(this.steer_angle_max_deg);
            serializer.Write(this.steer_angle_request_deg);
        }

        public override string ToString()
        {
            return "VCU2AISteerMsg: " +
            "\nsteer_angle_deg: " + steer_angle_deg.ToString() +
            "\nsteer_angle_max_deg: " + steer_angle_max_deg.ToString() +
            "\nsteer_angle_request_deg: " + steer_angle_request_deg.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
